[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "computer-task-manager"
version = "0.1.0"
description = "Advanced task management and directive processing system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Computer Project", email = "computer@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "PyYAML>=6.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
enhanced = [
    "rich>=13.5.0",
    "click>=8.1.0",
]

[project.urls]
Homepage = "https://github.com/your-username/computer"
Repository = "https://github.com/your-username/computer.git"
Issues = "https://github.com/your-username/computer/issues"

[project.scripts]
computer = "bin.computer:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*", "lib*", "templates*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=agents --cov=lib"

[tool.coverage.run]
source = ["agents", "lib"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]